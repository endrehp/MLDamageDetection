

% Polynomial fit

ne = 100;
ns = 9;
damage = [30, 50];
f = [0.1, 0.2];

[uV, uD] = damagedBeam(ne, ns, 0, 0);
[dV, dD] = damagedBeam(ne, ns, damage, f);

U = [zeros(1, length(uV(1,:))); uV; zeros(1, length(uV(1,:)))];
V = [zeros(1, length(dV(1,:))); dV; zeros(1, length(dV(1,:)))];

L = length(U(:,1));
N = 2;

u = U(:,3);
x = linspace(0,1,L)';

% Cubic polynomial coefficients
P = polyfit(x,u,3);

xf = linspace(0,1,1000);
uf = P(1)*xf.^3+P(2)*xf.^2+P(3)*xf+P(4);

figure
hold on
plot(x,u, 'o')
plot(xf,uf)

i = 1;
n = 100;

ui_tot = [];
xi_tot = [];

% Polyfit subsections
while i+1 <= L
    
    
    
    if i == 1
        
    elseif i+1 == L
        
    else
        
        Pi = polyfit(x(i-1:i+1), u(i-1:i+1), 2);
        xi = linspace(x(i-1),x(i+1),n);
        %ui = Pi(1)*xi.^3+Pi(2)*xi.^2+Pi(3)*xi+Pi(4);
        ui = Pi(1)*xi.^2+Pi(2)*xi+Pi(3);

    i = i + 2;
    
    ui_tot = [ui_tot, ui];
    xi_tot = [xi_tot, xi];

end

figure
hold on
plot(x,u, 'o')
plot(xi_tot,ui_tot)


